<?php

namespace Gecche\Cupparis\App\Geografiche\Models;

use Gecche\Cupparis\App\Breeze\Breeze;
use Illuminate\Support\Facades\DB;

/**
 * Breeze (Eloquent) model for T_REGIONE table.
 */
class CupGeoRegione extends Breeze
{
	use Relations\RegioneRelations;


    
//    use ModelWithUploadsTrait;

    protected $table = 'T_REGIONE';

    protected $guarded = ['id'];

    public $timestamps = false;
    public $ownerships = false;

    public $appends = [

    ];


    public static $relationsData = [

			'area' => [self::BELONGS_TO, 'related' => Area::class, 'table' => 'T_AREA', 'foreignKey' => 'T_AREA_ID'],


//        'belongsto' => array(self::BELONGS_TO, Regione::class, 'foreignKey' => '<FOREIGNKEYNAME>'),
//        'belongstomany' => array(self::BELONGS_TO_MANY, Regione::class, 'table' => '<TABLEPIVOTNAME>','pivotKeys' => [],'foreignKey' => '<FOREIGNKEYNAME>','otherKey' => '<OTHERKEYNAME>') ,
//        'hasmany' => array(self::HAS_MANY, Regione::class, 'table' => '<TABLENAME>','foreignKey' => '<FOREIGNKEYNAME>'),
    ];

    public static $rules = [
//        'username' => 'required|between:4,255|unique:users,username',
    ];

    public $columnsForSelectList = ['T_REGIONE_DESC', 'area|T_AREA_DESC'];
     //['id','descrizione'];

    public $defaultOrderColumns = ['T_REGIONE_DESC' => 'ASC', ];
     //['cognome' => 'ASC','nome' => 'ASC'];

    public $columnsSearchAutoComplete = ['T_REGIONE_DESC'];
     //['cognome','denominazione','codicefiscale','partitaiva'];

    public $nItemsAutoComplete = 20;
    public $nItemsForSelectList = 100;
    public $itemNoneForSelectList = false;
    public $fieldsSeparator = ' - ';

    public function save(array $options = [])
    {

        $oldAreaId = $this->getOriginal('T_AREA_ID');
        $newAreaId = $this->T_AREA_ID;

        $saved = parent::save($options); // TODO: Change the autogenerated stub

        if ($saved && $oldAreaId !== $newAreaId) {
            DB::table('T_PROVINCIA')
                ->where('T_REGIONE_ID',$this->getKey())
                ->update(['T_AREA_ID' => $newAreaId]);

            DB::table('T_ANAGIST')
                ->where('T_REGIONE_ID',$this->getKey())
                ->update(['T_AREA_ID' => $newAreaId]);
        }

        return $saved;

    }


}
