<?php

namespace Gecche\Cupparis\App\Geografiche\Models;

use App\Models\CupGeoArea;
use Gecche\Cupparis\App\Breeze\Breeze;
use Illuminate\Support\Facades\DB;

/**
 * Breeze (Eloquent) model for T_REGIONE table.
 */
class CupGeoRegione extends Breeze
{
//	use Relations\RegioneRelations;


    
//    use ModelWithUploadsTrait;

    protected $table = 'cup_geo_regioni';

    protected $guarded = ['id'];

    public $timestamps = false;
    public $ownerships = false;

    public $appends = [

    ];


    public static $relationsData = [

			'area' => [self::BELONGS_TO, 'related' => CupGeoArea::class, 'table' => 'cup_geo_aree', 'foreignKey' => 'area_id'],


//        'belongsto' => array(self::BELONGS_TO, Regione::class, 'foreignKey' => '<FOREIGNKEYNAME>'),
//        'belongstomany' => array(self::BELONGS_TO_MANY, Regione::class, 'table' => '<TABLEPIVOTNAME>','pivotKeys' => [],'foreignKey' => '<FOREIGNKEYNAME>','otherKey' => '<OTHERKEYNAME>') ,
//        'hasmany' => array(self::HAS_MANY, Regione::class, 'table' => '<TABLENAME>','foreignKey' => '<FOREIGNKEYNAME>'),
    ];

    public static $rules = [
//        'username' => 'required|between:4,255|unique:users,username',
    ];

    public $columnsForSelectList = ['nome_it', 'area|nome_it'];
     //['id','nome_it'];

    public $defaultOrderColumns = ['nome_it' => 'ASC', ];
     //['cognome' => 'ASC','nome' => 'ASC'];

    public $columnsSearchAutoComplete = ['nome_it'];
     //['cognome','denominazione','codicefiscale','partitaiva'];

    public $nItemsAutoComplete = 20;
    public $nItemsForSelectList = 100;
    public $itemNoneForSelectList = false;
    public $fieldsSeparator = ' - ';

    public function save(array $options = [])
    {

        $oldAreaId = $this->getOriginal('area_id');
        $newAreaId = $this->area_id;

        $saved = parent::save($options); // TODO: Change the autogenerated stub

        if ($saved && $oldAreaId !== $newAreaId) {
            DB::table('cup_geo_province')
                ->where('regione_id',$this->getKey())
                ->update(['area_id' => $newAreaId]);

            DB::table('cup_geo_comuni')
                ->where('regione_id',$this->getKey())
                ->update(['area_id' => $newAreaId]);
        }

        return $saved;

    }


}
